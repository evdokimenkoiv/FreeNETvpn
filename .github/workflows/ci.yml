name: CI

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  lint_bash:
    name: Shellcheck (bash)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install shellcheck
        run: sudo apt-get update -y && sudo apt-get install -y shellcheck
      - name: Run shellcheck
        run: |
          shopt -s globstar
          shellcheck -x install.sh menu.sh restore.sh scripts/**/*.sh || true

  lint_yaml:
    name: Lint YAML
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Покажем, что именно ругается, но НЕ упадём, если предупреждения
      - name: Run yamllint (relaxed)
        uses: ibiqlik/action-yamllint@v3
        with:
          file_or_dir: |
            docker-compose.yml
            .github/workflows
          # Мягкие правила прямо в workflow (можно оставить .yamllint — не принципиально)
          config_data: |
            extends: default
            rules:
              line-length: disable
              document-start: disable
              trailing-spaces: disable
              indentation:
                indent-sequences: consistent
              new-lines: enable
              truthy:
                allowed-values: ["true", "false", "on", "off", "yes", "no"]
          strict: false

  validate_env:
    name: Validate .env.example variables
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run validator
        run: python3 tools/validate_env.py

  build_admin:
    name: Build admin image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: docker build -t freenetvpn-admin ./admin

  compose_check:
    name: docker-compose config
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install docker-compose
        run: sudo apt-get update -y && sudo apt-get install -y docker-compose
      - name: Validate compose
        run: docker-compose config

  bundle_release:
    name: Bundle repo artifact
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Create bundle
        id: bundle
        shell: bash
        run: |
          ts=$(date +%s)
          FILENAME="FreeNETvpn-bundle-${ts}.tar.gz"
          tar czf "$FILENAME" .
          echo "file=$FILENAME" >> "$GITHUB_OUTPUT"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: FreeNETvpn-bundle
          path: ${{ steps.bundle.outputs.file }}
